
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/FBs' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK FB_Button
VAR_INPUT
	ROOM: STRING;
	LOCATION: STRING;
	IN: BOOL;
	LONGPRESS: TIME := t#250ms; (*read by the visualisation*)
	RESET: BOOL := TRUE; (* if TRUE, viText is set; set to FALSE within the cycle *)
END_VAR
VAR_OUTPUT PERSISTENT
	toggleOnPress: BOOL;
	toggleOnRelease: BOOL;
	toggleOnLongpress: BOOL;
	toggleOnClick: BOOL;
	usageCounterPress: UDINT; (*overall number of press events*)
	usageCounterRelease: UDINT; (*overall number of release events*)
	usageCounterLongpress: UDINT; (*overall number longpress events*)
	usageCounterClick: UDINT; (*overall number of click events*)
END_VAR
VAR_OUTPUT
	isPressed: BOOL := FALSE;
	isReleased: BOOL; (*NOT isPressed*)
	isLongpressed: BOOL := FALSE;
	isClicked: BOOL := FALSE;
	pulseOnPress: BOOL;
	pulseOnRelease: BOOL;
	pulseOnLongpress: BOOL;
	pulseOnClick: BOOL; (* TAKE CARE: this is not reported after a pulseOnLongpress! if required, use pulseOnRelease. *)
END_VAR
VAR
	viIN: BOOL; (*written by the visualisation*)
	viText: STRING; (*read by the visualisation*)
	pTrig: R_TRIG;
	rTrig: F_TRIG;
	longpressTimer: TON;
	lTrig: R_TRIG;
	cTrig: R_TRIG;
	myIN: BOOL;
END_VAR
(* @END_DECLARATION := '0' *)
IF RESET THEN
	viText := CONCAT(ROOM, ' ');
	viText := CONCAT(viText, LOCATION);
	RESET := FALSE;
END_IF
myIN := IN XOR viIN;

pTrig(CLK := myIN);
rTrig(CLK := myIN);
pulseOnPress := pTrig.Q;
pulseOnRelease := rTrig.Q;

longpressTimer(IN := myIN, PT := LONGPRESS);
lTrig(CLK := longpressTimer.Q);
pulseOnLongpress := lTrig.Q;
IF pulseOnLongpress AND NOT pulseOnRelease THEN
	isLongpressed := TRUE;
	usageCounterLongpress := usageCounterLongpress + 1;
	toggleOnLongpress := fToggle(toggleOnLongpress);
ELSIF pulseOnLongpress THEN
	pulseOnLongpress := FALSE;
END_IF

IF pulseOnPress THEN
	isPressed := TRUE;
	isClicked := FALSE;
	isLongpressed := FALSE;
	usageCounterPress := usageCounterPress + 1;
	toggleOnPress := fToggle(toggleOnPress);
ELSIF pulseOnRelease THEN
	isPressed := FALSE;
	IF isLongpressed THEN
		isLongpressed := FALSE;
	ELSE
		isClicked := TRUE;
		usageCounterClick := usageCounterClick + 1;
		toggleOnClick := fToggle(toggleOnClick);
	END_IF
	usageCounterRelease := usageCounterRelease + 1;
	toggleOnRelease := fToggle(toggleOnRelease);
END_IF
isReleased := NOT isPressed;

cTrig(CLK := isClicked);
pulseOnClick := cTrig.Q;
END_FUNCTION_BLOCK
