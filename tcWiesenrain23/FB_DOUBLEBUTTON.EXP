
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/FBs' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK FB_DoubleButton
VAR_INPUT
	ACTIVITY: BOOL;
	RESET: BOOL := TRUE;
	FALLBACK: TIME := t#15s;
	TIMEOUT: TIME := t#250ms;
	CLICK_A_IN: BOOL;
	CLICK_B_IN: BOOL;
	LONGCLICK_A_IN: BOOL;
	LONGCLICK_B_IN: BOOL;
END_VAR
VAR_OUTPUT
	Q: UINT; (* counts the doublepresses, resets to 0 after FALLBACK *)
	CLICK_A_OUT: BOOL;
	CLICK_B_OUT: BOOL;
	LONGCLICK_A_OUT: BOOL;
	LONGCLICK_B_OUT: BOOL;
END_VAR
VAR
	rA: R_TRIG;
	rB: R_TRIG;
	lTof: TOF;
	rTof: TOF;
	timer: TON;
	manual: BOOL;
	reStart: R_TRIG;
END_VAR
(* @END_DECLARATION := '0' *)
IF RESET THEN
	Q := 0;
	timer(IN := FALSE); (* reset timer *)
	RESET := FALSE;
END_IF

IF Q > 0 THEN
	IF ACTIVITY THEN (* advance timer *)
		timer(IN := FALSE);
		timer.IN := TRUE;
	END_IF
	timer(); (* update timer *)
	IF timer.Q = TRUE THEN
		RESET := TRUE;
	END_IF
END_IF

rA(CLK := CLICK_A_IN);
rB(CLK := CLICK_B_IN);
lTof(IN := rA.Q, PT := TIMEOUT);
rTof(IN := rB.Q, PT := TIMEOUT);
reStart(CLK := lTof.Q AND rTof.Q);

IF reStart.Q THEN
	Q := Q + 1;
	IF Q = 1 THEN (* init timer *)
		timer.IN := TRUE;
		timer.PT := FALLBACK;
	ELSE
		timer(IN := FALSE);
		timer.IN := TRUE;
	END_IF
	timer(); (* update timer *)
END_IF
END_FUNCTION_BLOCK
